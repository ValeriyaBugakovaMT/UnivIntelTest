@using Radzen
@implements IRadzenFormValidator
@if(Visible && !IsValid) 
{
<div class="ui-message ui-messages-error">
 @Text
</div>
}
@functions {
    [Parameter]
    public string Style { get; set; }

    [Parameter]
    public string Text { get; set; }

    [Parameter]
    public string Component { get; set; }

    dynamic _form;

    [CascadingParameter]
    public dynamic Form
    {
        get
        {
            return _form;
        }
        set
        {
            if (_form != value)
            {
                _form = value;
                _form.AddComponent(this);
            }
        }
    }

    [Parameter]
    public bool Visible { get; set; } = true;

    public bool IsValid
    {
        get
        {
            if (ComponentRef != null)
            {
                return ComponentRef.HasValue;
            }

            return true;
        }
    }

    public IRadzenFormComponent ComponentRef { get; set; }
    public void Validate(IRadzenFormComponent component)
    {
        ComponentRef = component;
        StateHasChanged();
    }
}